{"version":3,"sources":["bootstrap/models/preSharedKey.ts"],"names":[],"mappings":";AAAA;;;;;;;;;;;;;;;GAeG;;AAKH,oDAAoD;AAEpD;IAMI,sBAAY,IAA2B,EAAmB,IAAkB;QAA5E,iBAIC;QAJyD,SAAI,GAAJ,IAAI,CAAc;QACxE,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,OAAO,CAAC,UAAA,GAAG;YACzB,KAAI,CAAC,GAAG,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC;QAC1B,CAAC,CAAC,CAAC;IACP,CAAC;IAYM,6BAAM,GAAb,UAAc,QAA2B;QAAzC,iBAIC;QAHG,MAAM,CAAC,sBAAU,CAAC,UAAA,IAAI;YAClB,KAAI,CAAC,IAAI,CAAC,SAAS,CAAC,KAAI,CAAC,YAAY,EAAE,IAAI,CAAC,CAAC;QACjD,CAAC,EAAE,QAAQ,CAAC,CAAC;IACjB,CAAC;IACL,mBAAC;AAAD,CA3BA,AA2BC,IAAA;AA3BY,oCAAY","file":"preSharedKey.js","sourcesContent":["/*\n * Mbed Cloud JavaScript SDK\n * Copyright Arm Limited 2018\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { AddPreSharedKey } from \"../types\";\nimport { BootstrapApi } from \"../bootstrapApi\";\nimport { CallbackFn } from \"../../common/interfaces\";\nimport { asyncStyle } from \"../../common/functions\";\n\nexport class PreSharedKey {\n    /**\n     * Creation time.\n     */\n    public readonly createdAt?: Date;\n\n    constructor(init: Partial<PreSharedKey>, private readonly _api: BootstrapApi) {\n        Object.keys(init).forEach(key => {\n            this[key] = init[key];\n        });\n    }\n\n    /**\n     * Delete this PSK.\n     * @returns Promise containing any error\n     */\n    public delete(): Promise<void>;\n    /**\n     * Delete this PSK.\n     * @param callback A function that is passed any error\n     */\n    public delete(callback: CallbackFn<void>): void;\n    public delete(callback?: CallbackFn<void>): Promise<void> {\n        return asyncStyle(done => {\n            this._api.deletePsk(this.endpointName, done);\n        }, callback);\n    }\n}\n\nexport interface PreSharedKey extends AddPreSharedKey { }\n"],"sourceRoot":"../../../src"}