{"version":3,"sources":["bootstrap/models/preSharedKeyAdapter.ts"],"names":[],"mappings":";;AAkBA,+CAA8C;AAGjC,QAAA,QAAQ,GAAG,UAAC,IAAyB,EAAE,GAAiB;IACjE,MAAM,CAAC,IAAI,2BAAY,CAAC;QACpB,YAAY,EAAE,IAAI,CAAC,aAAa;QAChC,SAAS,EAAK,IAAI,CAAC,UAAU;QAC7B,SAAS,EAAK,IAAI;KACrB,EAAE,GAAG,CAAC,CAAC;AACZ,CAAC,CAAC;AAEW,QAAA,OAAO,GAAG,UAAC,IAAqB,EAAE,GAAiB;IAC5D,MAAM,CAAC,IAAI,2BAAY,CAAC;QACpB,YAAY,EAAE,IAAI,CAAC,YAAY;QAC/B,SAAS,EAAK,IAAI,CAAC,SAAS;KAC/B,EAAE,GAAG,CAAC,CAAC;AACZ,CAAC,CAAC;AAEW,QAAA,SAAS,GAAG,UAAC,IAAqB;IAC3C,MAAM,CAAC;QACH,aAAa,EAAE,IAAI,CAAC,YAAY;QAChC,UAAU,EAAE,IAAI,CAAC,SAAS;KAC7B,CAAC;AACN,CAAC,CAAC","file":"preSharedKeyAdapter.js","sourcesContent":["/*\n * Mbed Cloud JavaScript SDK\n * Copyright Arm Limited 2018\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { PreSharedKey as ConnectorPSKFull, PreSharedKeyWithoutSecret as ConnectorPSKPartial } from \"../../_api/connector_bootstrap\";\nimport { BootstrapApi } from \"../bootstrapApi\";\nimport { PreSharedKey } from \"./preSharedKey\";\nimport { AddPreSharedKey } from \"../types\";\n\nexport const mapToSDK = (from: ConnectorPSKPartial, api: BootstrapApi): PreSharedKey => {\n    return new PreSharedKey({\n        endpointName: from.endpoint_name,\n        createdAt:    from.created_at,\n        secretHex:    null,\n    }, api);\n};\n\nexport const mapFrom = (from: AddPreSharedKey, api: BootstrapApi): PreSharedKey => {\n    return new PreSharedKey({\n        endpointName: from.endpointName,\n        secretHex:    from.secretHex,\n    }, api);\n};\n\nexport const mapToSpec = (from: AddPreSharedKey): ConnectorPSKFull => {\n    return {\n        endpoint_name: from.endpointName,\n        secret_hex: from.secretHex,\n    };\n};\n"],"sourceRoot":"../../../src"}