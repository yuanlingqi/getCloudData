{"version":3,"sources":["subscribe/observers/resourceValuesObserver.ts"],"names":[],"mappings":"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","file":"resourceValuesObserver.js","sourcesContent":["import { Observer } from \"./observer\";\nimport { ResourceValuesFilter, NotificationData, PresubscriptionObject, FirstValueEnum } from \"../../connect/types\";\nimport { ensureArray, matchWithWildcard } from \"../../common/functions\";\nimport { ConnectApi } from \"../../connect/connectApi\";\n\n/*\n* Mbed Cloud JavaScript SDK\n* Copyright Arm Limited 2017\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n* http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\nexport class ResourceValuesObserver extends Observer<NotificationData> {\n\n    public firstValue: FirstValueEnum;\n\n    private _subscribed: boolean = true;\n\n    private connect: ConnectApi;\n\n    private filter: ResourceValuesFilter;\n\n    public localPresubscriptions: Array<PresubscriptionObject>;\n\n    constructor(_filter?: ResourceValuesFilter, _connect?: ConnectApi, firstValue: FirstValueEnum = \"OnValueUpdate\") {\n        super();\n        this.firstValue = firstValue;\n        this.localPresubscriptions = new Array();\n        if (_connect) {\n            this.connect = _connect;\n        }\n\n        if (_filter) {\n            this.filter = _filter;\n            // create presubscriptions\n            ensureArray(this.filter.deviceId).forEach(d => {\n                this.localPresubscriptions.push({ deviceId: d, resourcePaths: this.filter.resourcePaths || new Array() });\n            });\n            this.syncPresubscriptions();\n        }\n    }\n\n    /**\n     * Notify this observer\n     * @param data\n     */\n    public notify(data: NotificationData): void {\n        if (this._subscribed) {\n            if (this.localPresubscriptions.length === 0) {\n                super.notify(data);\n            }\n\n            if (this.compareData(data)) {\n                super.notify(data);\n            }\n        }\n    }\n\n    /**\n     * Stop this observer from recieving notifications\n     */\n    public unsubscribe(): void {\n        this._subscribed = false;\n        super.clearListeners();\n    }\n\n    private compareData(data: NotificationData): boolean {\n        return this.localPresubscriptions.some(sub => {\n            return matchWithWildcard(sub.deviceId, data.deviceId) && (sub.resourcePaths.length === 0 || sub.resourcePaths.some(r => matchWithWildcard(r, data.path)));\n        });\n    }\n\n    private syncPresubscriptions(): void {\n        if (this.connect) {\n            this.connect.listPresubscriptions()\n                .then(subs => {\n                    const concat = this.localPresubscriptions.concat(subs);\n                    const union = concat.filter((el, i, a) => i === a.indexOf(el));\n                    this.connect.updatePresubscriptions(union);\n                });\n\n            if (this.firstValue === \"OnValueUpdate\") {\n                this.localPresubscriptions.forEach(p => {\n                    this.connect.listConnectedDevices()\n                        .then(devices => {\n                            devices.data.filter(device => matchWithWildcard(device.id, p.deviceId))\n                                .forEach(m => {\n                                    m.listResources()\n                                        .then(r => {\n                                            r.forEach(q => {\n                                                if (p.resourcePaths.length === 0 || p.resourcePaths.some(w => matchWithWildcard(w, q.path))) {\n                                                    this.connect.addResourceSubscription(m.id, q.path);\n                                                }\n                                            });\n                                        });\n                                });\n                        });\n                });\n            }\n        }\n    }\n}\n"],"sourceRoot":"../../../src"}